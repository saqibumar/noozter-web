import { Pipe } from '@angular/core';
import { DomSanitizer, SafeHtml, SafeStyle, SafeScript, SafeUrl, SafeResourceUrl } from '@angular/platform-browser';
/**
 * As loaded models cal have HTML as there value and angular will escape this values when bound to
 * a property we have to implement a pipe in order to bypass html escape conversion.
 * Usage: <div [innerHTML]="model.value | saveValue [:'<type>']">
 */
@Pipe({
  name: 'safeValue'
})
export class SafeValuePipe {
  constructor(protected _sanitizer: DomSanitizer) {}
  public transform(value: any, type: string = 'html'): SafeHtml | SafeStyle | SafeScript | SafeUrl | SafeResourceUrl {
    if (value === void 0) {
      return '';
    }
    switch (type) {
      case 'node':
        // const tmp: Element = document.createElement("div");
        // tmp.appendChild(value);
        return this._sanitizer.bypassSecurityTrustHtml(value.innerHTML);
      case 'html': return this._sanitizer.bypassSecurityTrustHtml(value);
      case 'style': return this._sanitizer.bypassSecurityTrustStyle(value);
      case 'script': return this._sanitizer.bypassSecurityTrustScript(value);
      case 'url': return this._sanitizer.bypassSecurityTrustUrl(value);
      case 'resourceUrl': return this._sanitizer.bypassSecurityTrustResourceUrl(value);
      default: throw new Error(`Invalid safe type specified: ${type}`);
    }
  }

}
